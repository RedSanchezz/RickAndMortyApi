{"version":3,"sources":["components/Character/Character.tsx","components/Filters/Filters.tsx","components/Pagination/Pagination.tsx","components/ModalCharacter/ModalCharacter.tsx","components/App.tsx","API/characterAPI.ts","reportWebVitals.ts","index.tsx"],"names":["Character","character","setOpenModal","setCurrentCharacter","className","onClick","e","name","src","image","alt","id","gender","species","created","Filters","acceptFilters","showPreloader","useState","nameFilter","setNameFilter","statusFilter","setStatusFilter","speciesFilter","setSpeciesFilter","typeFilter","setTypeFilter","genderFilter","setGenderFilter","openMobileFilters","setOpenMobileFilters","TextField","label","onChange","currentTarget","value","FormControl","InputLabel","Select","labelId","target","MenuItem","CircularProgress","filters","push","Pagination","currentPage","setCurrentPage","pagesCount","setCurrentPageHandler","number","isPositionActivePage","getNumberPage","ModalCharacter","isOpen","episodes","setEpisodes","setShowPreloader","useEffect","episode","Promise","all","map","url","fetch","then","resolve","response","json","jsons","newEpisodes","forEach","status","type","location","origin","episodeName","index","replace","App","characterList","setCharacterList","setPagesCount","setFilters","isOpenModal","currentCharacter","errorText","setErrorText","page","baseURL","length","filter","ok","Error","getCharacters","results","info","pages","catch","message","Container","maxWidth","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.332f1e85.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Character.css'\r\nimport {ICharacter} from \"../../API/characterAPI\";\r\n\r\n\r\ninterface CharacterProps {\r\n    character: ICharacter\r\n    setOpenModal(isShow: boolean): void\r\n    setCurrentCharacter(character: ICharacter): void\r\n}\r\n\r\nconst Character: React.FC<CharacterProps> = ({character, setOpenModal, setCurrentCharacter})=> {\r\n\r\n    function clickCharacterHandler(e : React.MouseEvent) {\r\n        setCurrentCharacter(character);\r\n        setOpenModal(true);\r\n    }\r\n\r\n    return (\r\n            <div className='characters__characters-list-item character-item'\r\n                 onClick={clickCharacterHandler}>\r\n                <div className='character-item__name'>Имя: {character.name}</div>\r\n                <div className='character-item__image'>\r\n                    <img src={character.image} alt='character-logo'/>\r\n                </div>\r\n                <div className='character-item__id'>\r\n                    ID: {character.id}\r\n                </div>\r\n                <div className='character-item__gender'>\r\n                    Пол: {character.gender}\r\n                </div>\r\n                <div className='character-item__created'>\r\n                    Вид персоонажа: {character.species}\r\n                </div>\r\n                <div className='character-item__created'>\r\n                    created {character.created}\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Character;","import React, {useState} from 'react';\r\nimport './Filters.css'\r\nimport {FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\ninterface FiltersProps {\r\n    acceptFilters(filters: string[]): void\r\n\r\n    showPreloader: boolean\r\n}\r\n\r\n\r\nconst Filters: React.FC<FiltersProps> = ({acceptFilters, showPreloader}) => {\r\n\r\n    const [nameFilter, setNameFilter] = useState<string>('');\r\n    const [statusFilter, setStatusFilter] = useState<string>('');\r\n\r\n    const [speciesFilter, setSpeciesFilter] = useState<string>('');\r\n    const [typeFilter, setTypeFilter] = useState<string>('');\r\n    const [genderFilter, setGenderFilter] = useState<string>('');\r\n    const [openMobileFilters, setOpenMobileFilters] = useState<boolean>(false);\r\n\r\n\r\n    function changeNameInputHandler(e: React.ChangeEvent<any>) {\r\n        setNameFilter(e.currentTarget.value);\r\n    }\r\n\r\n    function changeSpeciesInputHandler(e: React.ChangeEvent<any>) {\r\n        setSpeciesFilter(e.currentTarget.value)\r\n    }\r\n\r\n    function changeTypeInputHandler(e: React.ChangeEvent<any>) {\r\n        setTypeFilter(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    function changeGenderSelectHandler(e: React.ChangeEvent<any>) {\r\n        setGenderFilter(e.target.value);\r\n    }\r\n\r\n    function changeStatusSelectHandler(e: React.ChangeEvent<any>) {\r\n        setStatusFilter(e.target.value);\r\n    }\r\n\r\n    function clickMobileButtonOpenHandler(e: React.MouseEvent) {\r\n        setOpenMobileFilters(true);\r\n    }\r\n\r\n    function clickMobileButtonCloseHandler(e: React.MouseEvent) {\r\n        setOpenMobileFilters(false);\r\n    }\r\n\r\n\r\n    function clickAcceptFiltersButtonHandler(e: React.SyntheticEvent) {\r\n        setOpenMobileFilters(false);\r\n\r\n        let filters = [];\r\n        nameFilter && filters.push(`name=${nameFilter}`);\r\n        statusFilter && filters.push(`status=${statusFilter}`);\r\n        speciesFilter && filters.push(`species=${speciesFilter}`);\r\n        typeFilter && filters.push(`type=${typeFilter}`);\r\n        genderFilter && filters.push(`gender=${genderFilter}`);\r\n        acceptFilters(filters);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='characters__filters'>\r\n            <div onClick={clickMobileButtonOpenHandler} className='characters__filters-mobile-btn'>\r\n                <img src='images/filter-icon.svg' alt='filter-icon'/>\r\n            </div>\r\n            <div className={openMobileFilters ? 'characters__filters-list open' : 'characters__filters-list'}>\r\n                <div onClick={clickMobileButtonCloseHandler} className='characters__filters-close-mobile-btn'>\r\n                    <img src='images/close-btn.svg' alt='close-btn'/>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <TextField id=\"standard\" label=\"Имя\"\r\n                               onChange={changeNameInputHandler} value={nameFilter}/>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <FormControl>\r\n                        <InputLabel id=\"demo-simple-select-label\">Статус</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={statusFilter}\r\n                            onChange={changeStatusSelectHandler}\r\n                        >\r\n                            <MenuItem value=''>-</MenuItem>\r\n                            <MenuItem value='Alive'>Жив</MenuItem>\r\n                            <MenuItem value='Dead'>Мертв</MenuItem>\r\n                            <MenuItem value='unknown'>Неизвестно</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <TextField id=\"standard\" label=\"Вид\"\r\n                               value={speciesFilter} onChange={changeSpeciesInputHandler}/>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <TextField id=\"standard\" label=\"Тип персоонажа\"\r\n                               onChange={changeTypeInputHandler} value={typeFilter}/>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <FormControl>\r\n                        <InputLabel id=\"gender-filter-input-label\">Пол</InputLabel>\r\n                        <Select\r\n                            labelId=\"gender-filter-input-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={genderFilter}\r\n                            onChange={changeGenderSelectHandler}\r\n                        >\r\n                            <MenuItem value=''>-</MenuItem>\r\n                            <MenuItem value='Female'>Женщина</MenuItem>\r\n                            <MenuItem value='Male'>Мужчина</MenuItem>\r\n                            <MenuItem value='Genderless'>Бесполый</MenuItem>\r\n                            <MenuItem value='unknown'>Неизвестно</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                </div>\r\n                {!showPreloader ?\r\n                    <div onClick={clickAcceptFiltersButtonHandler} className='characters__filters-update-btn '>\r\n                        <AutorenewIcon/>\r\n                    </div> :\r\n                    <div className='characters__filters-preloader'>\r\n                        <CircularProgress/>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport './Pagination.css';\r\n\r\ninterface PaginationProps {\r\n    currentPage:number\r\n    setCurrentPage(page:number):void\r\n    pagesCount: number\r\n    showPreloader: boolean\r\n\r\n}\r\n\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({currentPage, setCurrentPage, pagesCount, showPreloader}) => {\r\n\r\n    function onNextBtnClickHandler() {\r\n        setCurrentPage(currentPage + 1);\r\n    }\r\n\r\n    function onPrevBtnClickHandler() {\r\n        setCurrentPage(currentPage - 1);\r\n    }\r\n\r\n    function setCurrentPageHandler(number:number) {\r\n        if(showPreloader) return;\r\n        setCurrentPage(number)\r\n    }\r\n\r\n    //принимает позицию кнопки, возвращает активна ли она\r\n    function isPositionActivePage(number: number): boolean {\r\n        if (currentPage <= 3) {\r\n            return number === currentPage\r\n        } else {\r\n            if (pagesCount - 3 < currentPage) {\r\n                return getNumberPage(number) === currentPage;\r\n            }\r\n            return number === 3\r\n        }\r\n    }\r\n    //Принимает позицию кнопки, возвращает номер страницы\r\n    function getNumberPage(number: number): number {\r\n        if (currentPage <= 3) {\r\n            switch (number) {\r\n                case 1:\r\n                    return 1;\r\n                case 2:\r\n                    return 2;\r\n                case 3:\r\n                    return 3;\r\n                case 4:\r\n                    return 4;\r\n                case 5:\r\n                    return 5;\r\n            }\r\n        } else {\r\n            if (pagesCount - 3 < currentPage) {\r\n                switch (number) {\r\n                    case 1:\r\n                        return pagesCount - 4;\r\n                    case 2:\r\n                        return pagesCount - 3;\r\n                    case 3:\r\n                        return pagesCount - 2;\r\n                    case 4:\r\n                        return pagesCount - 1;\r\n                    case 5:\r\n                        return pagesCount;\r\n                }\r\n            }\r\n            switch (number) {\r\n                case 1:\r\n                    return currentPage - 2;\r\n                case 2:\r\n                    return currentPage - 1;\r\n                case 3:\r\n                    return currentPage;\r\n                case 4:\r\n                    return currentPage + 1;\r\n                case 5:\r\n                    return currentPage + 2;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <ul className={!showPreloader? \"pagination\" : \"pagination disabled\"}>\r\n            <li className={(currentPage - 1 === 0) ? \"pagination__item__icon disabled\" : \"pagination__item__icon\"}\r\n                onClick={onPrevBtnClickHandler}>\r\n                <i className=\"material-icons\">chevron_left</i>\r\n            </li>\r\n            <li className={isPositionActivePage(1) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(1))}>\r\n                {getNumberPage(1)}\r\n            </li>\r\n            {pagesCount>=2 &&<li className={isPositionActivePage(2) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(2))}>\r\n                {getNumberPage(2)}\r\n            </li>}\r\n            {pagesCount>=3 &&<li className={isPositionActivePage(3) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(3))}>\r\n                {getNumberPage(3)}\r\n            </li>}\r\n            {pagesCount>=4 && <li className={isPositionActivePage(4) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(4))}>\r\n                {getNumberPage(4)}\r\n            </li>}\r\n            {pagesCount>=5 && <li className={isPositionActivePage(5) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(5))}>\r\n                {getNumberPage(5)}\r\n            </li>}\r\n            <li className={(currentPage === pagesCount) ? \"pagination__item__icon disabled\" : \"pagination__item__icon\"}\r\n                onClick={onNextBtnClickHandler}>\r\n                <i className=\"material-icons\">chevron_right</i>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, {useEffect, useState} from 'react';\r\nimport './ModalCharacter.css'\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {ICharacter} from \"../../API/characterAPI\";\r\n\r\ninterface ModalCharacterProps {\r\n    isOpen:boolean,\r\n    character:ICharacter,\r\n    setOpenModal(openFlag:boolean):void,\r\n}\r\n\r\n\r\nconst ModalCharacter: React.FC<ModalCharacterProps> = ({isOpen, character, setOpenModal}) => {\r\n\r\n    const [episodes, setEpisodes]  = useState<string[]>([]);\r\n    const [showPreloader, setShowPreloader] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setShowPreloader(true);\r\n        if(isOpen===true){\r\n            let episodes = character.episode;\r\n\r\n            Promise.all(episodes.map((url:string)=>{return fetch(url)})).then((resolve)=>{\r\n                return Promise.all(resolve.map((response)=>{\r\n                    return response.json()\r\n                }));\r\n            }).then((jsons)=>{\r\n                let newEpisodes: any=[];\r\n                jsons.forEach((json)=>{\r\n                    newEpisodes.push(json.name);\r\n                })\r\n                setEpisodes(newEpisodes);\r\n                setShowPreloader(false);\r\n            })\r\n        }\r\n    }, [isOpen, character.episode]);\r\n\r\n    function clickModalWrapperHandler(e : React.MouseEvent) {\r\n        if(e.currentTarget===e.target) setOpenModal(false);\r\n    }\r\n    function closeModalBtnHandler(e : React.MouseEvent) {\r\n        setOpenModal(false);\r\n    }\r\n    return (\r\n        <div onClick={clickModalWrapperHandler} className={isOpen ? 'modal-wrapper open' : 'modal-wrapper'}>\r\n            <div className='modal-character'>\r\n                <div className='modal-character__name'>\r\n                    Имя: {character.name}\r\n                </div>\r\n                <div className='modal-character__img'>\r\n                    {isOpen && <img src={character.image} alt='character-logo'/>}\r\n                </div>\r\n                <div className='modal-character__item'>\r\n                    Статус: {character.status}\r\n                </div>\r\n                <div className='modal-character__item'>\r\n                    Вид: {character.species}\r\n                </div>\r\n                {character.type && <div className='modal-character__item'>\r\n                    Тип: {character.type}\r\n                </div>}\r\n                <div className='modal-character__item'>\r\n                    Пол: {character.gender}\r\n                </div>\r\n                <div className='modal-character__item'>\r\n                    Нахождение: {character.location.name}\r\n                </div>\r\n                <div className='modal-character__item'>\r\n                    Место проиcхождения: {character?.origin.name}\r\n                </div>\r\n                <div className='modal-character__episodes'>\r\n                    <h3>Серии</h3>\r\n                    {!showPreloader ?\r\n                        <ul>\r\n                            {episodes.map((episodeName: string, index)=>{\r\n                                return <li key={index}>{episodeName}</li>\r\n                            })}\r\n                        </ul>\r\n                        :\r\n                        <CircularProgress />\r\n                    }\r\n                </div>\r\n                <div className='modal-character__item'>\r\n                    Дата создания: {character.created.replace('T', ' ').replace('Z', '')}\r\n                </div>\r\n                <div onClick={closeModalBtnHandler} className='modal-character__close-btn'>\r\n                    <img src='images/close-btn.svg' alt='close-btn'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalCharacter;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Character from \"./Character/Character\";\nimport Filters from './Filters/Filters';\nimport {getCharacters, ICharacter} from '../API/characterAPI'\nimport Pagination from \"./Pagination/Pagination\";\nimport Container from '@material-ui/core/Container';\nimport {LinearProgress} from \"@material-ui/core\";\nimport ModalCharacter from \"./ModalCharacter/ModalCharacter\";\n\n\n\nconst App: React.FC = () => {\n\n    let [characterList, setCharacterList] = useState<ICharacter[] | []>([]);\n\n    let [currentPage, setCurrentPage] = useState<number>(1);\n    //количество страниц\n    let [pagesCount, setPagesCount] = useState<number>(1);\n\n    const [filters, setFilters] = useState<string[]>([]);\n\n    const [showPreloader, setShowPreloader] = useState<boolean>(false);\n    const [isOpenModal, setOpenModal] = useState<boolean>(false);\n\n    const [currentCharacter, setCurrentCharacter] = useState<ICharacter>();\n\n    const [errorText, setErrorText] = useState<string>('')\n\n    useEffect(() => {\n\n        setShowPreloader(true);\n        getCharacters(currentPage, filters).then((json: any) => {\n\n            setCharacterList(json.results);\n            setPagesCount(json.info.pages);\n            setShowPreloader(false);\n            setErrorText('');\n            //инициализируем персоонажа для модального окна\n            if(!currentCharacter)setCurrentCharacter(json.results[0]);\n        }).catch((e: Error) => {\n            setErrorText(e.message);\n            setCharacterList([]);\n            setPagesCount(1);\n            setShowPreloader(false);\n        })\n    }, [currentPage, filters])\n\n\n    function acceptFilters(filters: string[]):void {\n        setCurrentPage(1);\n        setFilters(filters);\n    }\n\n    return (\n        <div className=\"App\">\n            <Container maxWidth=\"lg\">\n                <Pagination showPreloader={showPreloader} currentPage={currentPage} setCurrentPage={setCurrentPage} pagesCount={pagesCount}/>\n                <Filters acceptFilters={acceptFilters} showPreloader={showPreloader}/>\n                {!showPreloader ? <>\n                    <div className='characters__characters-list'>\n                        {errorText && <h2>{errorText}</h2>}\n                        {characterList.map((character: ICharacter, index) => {\n                            return <Character key={index} character={character}\n                                              setOpenModal={setOpenModal}\n                                              setCurrentCharacter={setCurrentCharacter}\n                            />\n                        })}\n                    </div>\n                </> :\n                    <LinearProgress />\n                }\n                <Pagination showPreloader={showPreloader} currentPage={currentPage} setCurrentPage={setCurrentPage} pagesCount={pagesCount}/>\n            </Container>\n            {currentCharacter && <ModalCharacter  isOpen={isOpenModal}\n                             character={currentCharacter}\n                             setOpenModal={setOpenModal}\n            />}\n        </div>\n    );\n}\n\nexport default App;\n","\r\nexport const baseURL = 'https://rickandmortyapi.com/api/';\r\n\r\nexport interface ICharacter {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    species: string,\r\n    type: string,\r\n    gender: string,\r\n    origin: {\r\n        name: string,\r\n        url: string\r\n    },\r\n    location: {\r\n        name: string,\r\n        url: string\r\n    },\r\n    image: string,\r\n    episode: string[],\r\n    url: string,\r\n    created: string\r\n}\r\n\r\nexport function getCharacters(page?:number, filters?: string[]) : Promise<ICharacter> {\r\n\r\n    let url = baseURL + 'character/';\r\n    if(page) url = url + '?page='+page;\r\n\r\n    if(filters?.length){\r\n        filters.forEach((filter)=>{\r\n            url = url+'&' + filter;\r\n        })\r\n    }\r\n    return fetch(url).then((response)=>{\r\n        if(response.ok) return response.json();\r\n        else {\r\n            if(response.status===404){\r\n                throw Error('Персоонажей не найдено');\r\n            }\r\n            else  {\r\n                throw Error('Произошла ошибка !');\r\n\r\n            }\r\n        }\r\n\r\n    })\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}