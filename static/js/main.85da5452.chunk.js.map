{"version":3,"sources":["components/Character/Character.tsx","components/Filters/Filters.tsx","components/Pagination/Pagination.tsx","components/ModalCharacter/ModalCharacter.tsx","components/App.tsx","API/characterAPI.ts","reportWebVitals.ts","index.tsx"],"names":["Character","character","setOpenModal","setCurrentCharacter","className","onClick","e","name","src","image","alt","id","gender","species","created","slice","replace","Filters","acceptFilters","showPreloader","useState","nameFilter","setNameFilter","statusFilter","setStatusFilter","speciesFilter","setSpeciesFilter","typeFilter","setTypeFilter","genderFilter","setGenderFilter","openMobileFilters","setOpenMobileFilters","TextField","label","onChange","currentTarget","value","FormControl","InputLabel","Select","labelId","target","MenuItem","CircularProgress","filters","push","Pagination","currentPage","setCurrentPage","pagesCount","setCurrentPageHandler","number","isPositionActivePage","getNumberPage","ModalCharacter","isOpen","episodes","setEpisodes","setShowPreloader","useEffect","document","body","style","overflow","episode","Promise","all","map","url","fetch","then","resolve","response","json","jsons","newEpisodes","forEach","Fade","in","timeout","status","type","location","origin","episodeName","index","App","characterList","setCharacterList","setPagesCount","setFilters","isOpenModal","currentCharacter","errorText","setErrorText","page","baseURL","length","filter","ok","Error","getCharacters","results","info","pages","catch","message","Container","maxWidth","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85da5452.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Character.scss'\r\nimport {ICharacter} from \"../../API/characterAPI\";\r\n\r\n\r\ninterface CharacterProps {\r\n    character: ICharacter\r\n    setOpenModal(isShow: boolean): void\r\n    setCurrentCharacter(character: ICharacter): void\r\n}\r\n\r\nconst Character: React.FC<CharacterProps> = ({character, setOpenModal, setCurrentCharacter})=> {\r\n\r\n    function clickCharacterHandler(e : React.MouseEvent) {\r\n        setCurrentCharacter(character);\r\n        setOpenModal(true);\r\n    }\r\n\r\n    return (\r\n            <div className='characters__characters-list-item character-item'\r\n                 onClick={clickCharacterHandler}>\r\n                <div className='character-item__name'>Имя: {character.name}</div>\r\n                <div className='character-item__image'>\r\n                    <img src={character.image} alt='character-logo'/>\r\n                </div>\r\n                <div className='character-item__properties-list'>\r\n                    <div className='properties-list__item character-item__id'>\r\n                        ID: {character.id}\r\n                    </div>\r\n                    <div className='properties-list__item character-item__gender'>\r\n                        Пол: {character.gender}\r\n                    </div>\r\n                    <div className='properties-list__item character-item__created'>\r\n                        Вид персонажа: {character.species}\r\n                    </div>\r\n                    <div className='properties-list__item character-item__created'>\r\n                            Дата создания: {character.created.slice(0, 16).replace('T', ' ')}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Character;","import React, {useState} from 'react';\r\nimport './Filters.scss'\r\nimport {FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\ninterface FiltersProps {\r\n    acceptFilters(filters: string[]): void\r\n\r\n    showPreloader: boolean\r\n}\r\n\r\n\r\nconst Filters: React.FC<FiltersProps> = ({acceptFilters, showPreloader}) => {\r\n\r\n    const [nameFilter, setNameFilter] = useState<string>('');\r\n    const [statusFilter, setStatusFilter] = useState<string>('');\r\n\r\n    const [speciesFilter, setSpeciesFilter] = useState<string>('');\r\n    const [typeFilter, setTypeFilter] = useState<string>('');\r\n    const [genderFilter, setGenderFilter] = useState<string>('');\r\n    const [openMobileFilters, setOpenMobileFilters] = useState<boolean>(false);\r\n\r\n\r\n    function changeNameInputHandler(e: React.ChangeEvent<any>) {\r\n        setNameFilter(e.currentTarget.value);\r\n    }\r\n\r\n    function changeSpeciesInputHandler(e: React.ChangeEvent<any>) {\r\n        setSpeciesFilter(e.currentTarget.value)\r\n    }\r\n\r\n    function changeTypeInputHandler(e: React.ChangeEvent<any>) {\r\n        setTypeFilter(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    function changeGenderSelectHandler(e: React.ChangeEvent<any>) {\r\n        setGenderFilter(e.target.value);\r\n    }\r\n\r\n    function changeStatusSelectHandler(e: React.ChangeEvent<any>) {\r\n        setStatusFilter(e.target.value);\r\n    }\r\n\r\n    function clickMobileButtonOpenHandler(e: React.MouseEvent) {\r\n        setOpenMobileFilters(true);\r\n    }\r\n\r\n    function clickMobileButtonCloseHandler(e: React.MouseEvent) {\r\n        setOpenMobileFilters(false);\r\n    }\r\n\r\n\r\n    function clickAcceptFiltersButtonHandler(e: React.SyntheticEvent) {\r\n        setOpenMobileFilters(false);\r\n\r\n        let filters = [];\r\n        nameFilter && filters.push(`name=${nameFilter}`);\r\n        statusFilter && filters.push(`status=${statusFilter}`);\r\n        speciesFilter && filters.push(`species=${speciesFilter}`);\r\n        typeFilter && filters.push(`type=${typeFilter}`);\r\n        genderFilter && filters.push(`gender=${genderFilter}`);\r\n        acceptFilters(filters);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='characters__filters'>\r\n            <div onClick={clickMobileButtonOpenHandler} className='characters__filters-mobile-btn'>\r\n                <img src='images/filter-icon.svg' alt='filter-icon'/>\r\n            </div>\r\n            <div className={openMobileFilters ? 'characters__filters-list open' : 'characters__filters-list'}>\r\n                <div onClick={clickMobileButtonCloseHandler} className='characters__filters-close-mobile-btn'>\r\n                    <img src='images/close-btn.svg' alt='close-btn'/>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <TextField id=\"standard\" label=\"Имя\"\r\n                               onChange={changeNameInputHandler} value={nameFilter}/>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <FormControl>\r\n                        <InputLabel id=\"demo-simple-select-label\">Статус</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={statusFilter}\r\n                            onChange={changeStatusSelectHandler}\r\n                        >\r\n                            <MenuItem value=''>-</MenuItem>\r\n                            <MenuItem value='Alive'>Жив</MenuItem>\r\n                            <MenuItem value='Dead'>Мертв</MenuItem>\r\n                            <MenuItem value='unknown'>Неизвестно</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <TextField id=\"standard\" label=\"Вид\"\r\n                               value={speciesFilter} onChange={changeSpeciesInputHandler}/>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <TextField id=\"standard\" label=\"Тип персоонажа\"\r\n                               onChange={changeTypeInputHandler} value={typeFilter}/>\r\n                </div>\r\n                <div className='characters__filters-list-item'>\r\n                    <FormControl>\r\n                        <InputLabel id=\"gender-filter-input-label\">Пол</InputLabel>\r\n                        <Select\r\n                            labelId=\"gender-filter-input-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={genderFilter}\r\n                            onChange={changeGenderSelectHandler}\r\n                        >\r\n                            <MenuItem value=''>-</MenuItem>\r\n                            <MenuItem value='Female'>Женщина</MenuItem>\r\n                            <MenuItem value='Male'>Мужчина</MenuItem>\r\n                            <MenuItem value='Genderless'>Бесполый</MenuItem>\r\n                            <MenuItem value='unknown'>Неизвестно</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                </div>\r\n                {!showPreloader ?\r\n                    <div onClick={clickAcceptFiltersButtonHandler} className='characters__filters-update-btn '>\r\n                        <AutorenewIcon/>\r\n                    </div> :\r\n                    <div className='characters__filters-preloader'>\r\n                        <CircularProgress/>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport './Pagination.scss';\r\n\r\ninterface PaginationProps {\r\n    currentPage:number\r\n    setCurrentPage(page:number):void\r\n    pagesCount: number\r\n    showPreloader: boolean\r\n}\r\n\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({currentPage, setCurrentPage, pagesCount, showPreloader}) => {\r\n\r\n    function onNextBtnClickHandler() {\r\n        setCurrentPage(currentPage + 1);\r\n    }\r\n\r\n    function onPrevBtnClickHandler() {\r\n        setCurrentPage(currentPage - 1);\r\n    }\r\n\r\n    function setCurrentPageHandler(number:number) {\r\n        setCurrentPage(number)\r\n    }\r\n\r\n    //принимает позицию кнопки, возвращает активна ли она\r\n    function isPositionActivePage(number: number): boolean {\r\n        if (currentPage <= 3) {\r\n            return number === currentPage\r\n        } else {\r\n            if (pagesCount - 3 < currentPage) {\r\n                return getNumberPage(number) === currentPage;\r\n            }\r\n            return number === 3\r\n        }\r\n    }\r\n    //Принимает позицию кнопки, возвращает номер страницы\r\n    function getNumberPage(number: number): number {\r\n        if (currentPage <= 3) {\r\n            switch (number) {\r\n                case 1:\r\n                    return 1;\r\n                case 2:\r\n                    return 2;\r\n                case 3:\r\n                    return 3;\r\n                case 4:\r\n                    return 4;\r\n                case 5:\r\n                    return 5;\r\n            }\r\n        } else {\r\n            if (pagesCount - 3 < currentPage) {\r\n                switch (number) {\r\n                    case 1:\r\n                        return pagesCount - 4;\r\n                    case 2:\r\n                        return pagesCount - 3;\r\n                    case 3:\r\n                        return pagesCount - 2;\r\n                    case 4:\r\n                        return pagesCount - 1;\r\n                    case 5:\r\n                        return pagesCount;\r\n                }\r\n            }\r\n            switch (number) {\r\n                case 1:\r\n                    return currentPage - 2;\r\n                case 2:\r\n                    return currentPage - 1;\r\n                case 3:\r\n                    return currentPage;\r\n                case 4:\r\n                    return currentPage + 1;\r\n                case 5:\r\n                    return currentPage + 2;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <ul className={!showPreloader? \"pagination\" : \"pagination disabled\"}>\r\n            <li className={(currentPage - 1 === 0) ? \"pagination__item__icon disabled\" : \"pagination__item__icon\"}\r\n                onClick={onPrevBtnClickHandler}>\r\n                <i className=\"material-icons\">chevron_left</i>\r\n            </li>\r\n            <li className={isPositionActivePage(1) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(1))}>\r\n                {getNumberPage(1)}\r\n            </li>\r\n            {pagesCount>=2 &&<li className={isPositionActivePage(2) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(2))}>\r\n                {getNumberPage(2)}\r\n            </li>}\r\n            {pagesCount>=3 &&<li className={isPositionActivePage(3) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(3))}>\r\n                {getNumberPage(3)}\r\n            </li>}\r\n            {pagesCount>=4 && <li className={isPositionActivePage(4) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(4))}>\r\n                {getNumberPage(4)}\r\n            </li>}\r\n            {pagesCount>=5 && <li className={isPositionActivePage(5) ? \"pagination__item active\" : \"pagination__item\"}\r\n                onClick={() => setCurrentPageHandler(getNumberPage(5))}>\r\n                {getNumberPage(5)}\r\n            </li>}\r\n            <li className={(currentPage === pagesCount) ? \"pagination__item__icon disabled\" : \"pagination__item__icon\"}\r\n                onClick={onNextBtnClickHandler}>\r\n                <i className=\"material-icons\">chevron_right</i>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, {useEffect, useState} from 'react';\r\nimport './ModalCharacter.scss'\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {ICharacter} from \"../../API/characterAPI\";\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\ninterface ModalCharacterProps {\r\n    isOpen:boolean,\r\n    character:ICharacter,\r\n    setOpenModal(openFlag:boolean):void,\r\n}\r\n\r\n\r\nconst ModalCharacter: React.FC<ModalCharacterProps> = ({isOpen, character, setOpenModal}) => {\r\n\r\n    const [episodes, setEpisodes]  = useState<string[]>([]);\r\n    const [showPreloader, setShowPreloader] = useState(false);\r\n\r\n    //отключаем прокрутку страницы\r\n    useEffect(()=>{\r\n        if(isOpen) document.body.style.overflow='hidden'\r\n        else document.body.style.overflow=''\r\n\r\n    }, [isOpen])\r\n\r\n    useEffect(()=>{\r\n        setShowPreloader(true);\r\n        if(isOpen===true){\r\n            let episodes = character.episode;\r\n\r\n            Promise.all(episodes.map((url:string)=>{return fetch(url)})).then((resolve)=>{\r\n                return Promise.all(resolve.map((response)=>{\r\n                    return response.json()\r\n                }));\r\n            }).then((jsons)=>{\r\n                let newEpisodes: any=[];\r\n                jsons.forEach((json)=>{\r\n                    newEpisodes.push(json.name);\r\n                })\r\n                setEpisodes(newEpisodes);\r\n                setShowPreloader(false);\r\n            })\r\n        }\r\n    }, [isOpen, character.episode]);\r\n\r\n    function clickModalWrapperHandler(e : React.MouseEvent) {\r\n        if(e.currentTarget===e.target) setOpenModal(false);\r\n    }\r\n    function closeModalBtnHandler(e : React.MouseEvent) {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    return (\r\n        <Fade in={isOpen} timeout={500}>\r\n            <div onClick={clickModalWrapperHandler} className='modal-wrapper' >\r\n            <div className='modal-character'>\r\n                <div className='modal-character__name'>\r\n                    Имя: {character.name}\r\n                </div>\r\n                <div className='modal-character__img'>\r\n                    {isOpen && <img src={character.image} alt='character-logo'/>}\r\n                </div>\r\n                <div className='modal-character__item-list'>\r\n                    <div className='modal-character__item'>\r\n                        Статус: {character.status}\r\n                    </div>\r\n                    <div className='modal-character__item'>\r\n                        Вид: {character.species}\r\n                    </div>\r\n                    {character.type && <div className='modal-character__item'>\r\n                        Тип: {character.type}\r\n                    </div>}\r\n                    <div className='modal-character__item'>\r\n                        Пол: {character.gender}\r\n                    </div>\r\n                    <div className='modal-character__item'>\r\n                        Нахождение: {character.location.name}\r\n                    </div>\r\n                    <div className='modal-character__item'>\r\n                        Место проиcхождения: {character.origin.name}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='modal-character__episodes'>\r\n                    <h3>Серии</h3>\r\n                    {!showPreloader ?\r\n                        <ul>\r\n                            {episodes.map((episodeName: string, index)=>{\r\n                                return <li key={index}>{episodeName}</li>\r\n                            })}\r\n                        </ul>\r\n                        :\r\n                        <CircularProgress />\r\n                    }\r\n                </div>\r\n                <div className='modal-character__item'>\r\n                    Дата создания : {character.created.slice(0, 16).replace('T', ' ')}\r\n                </div>\r\n                <div onClick={closeModalBtnHandler} className='modal-character__close-btn'>\r\n                    <img src='images/close-btn.svg' alt='close-btn'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </Fade>\r\n    );\r\n}\r\n\r\nexport default ModalCharacter;","import React, {useEffect, useState} from 'react';\r\nimport './App.scss';\r\nimport Character from \"./Character/Character\";\r\nimport Filters from './Filters/Filters';\r\nimport {getCharacters, ICharacter} from '../API/characterAPI'\r\nimport Pagination from \"./Pagination/Pagination\";\r\nimport Container from '@material-ui/core/Container';\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport ModalCharacter from \"./ModalCharacter/ModalCharacter\";\r\n\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n    let [characterList, setCharacterList] = useState<ICharacter[] | []>([]);\r\n\r\n    let [currentPage, setCurrentPage] = useState<number>(1);\r\n    //количество страниц\r\n    let [pagesCount, setPagesCount] = useState<number>(1);\r\n\r\n    const [filters, setFilters] = useState<string[]>([]);\r\n\r\n    const [showPreloader, setShowPreloader] = useState<boolean>(false);\r\n    const [isOpenModal, setOpenModal] = useState<boolean>(false);\r\n\r\n    const [currentCharacter, setCurrentCharacter] = useState<ICharacter>();\r\n\r\n    const [errorText, setErrorText] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n\r\n        setShowPreloader(true);\r\n        getCharacters(currentPage, filters).then((json: any) => {\r\n\r\n            setCharacterList(json.results);\r\n            setPagesCount(json.info.pages);\r\n            setShowPreloader(false);\r\n            setErrorText('');\r\n            //инициализируем персоонажа для модального окна\r\n            if(!currentCharacter)setCurrentCharacter(json.results[0]);\r\n        }).catch((e: Error) => {\r\n            setErrorText(e.message);\r\n            setCharacterList([]);\r\n            setPagesCount(1);\r\n            setShowPreloader(false);\r\n        })\r\n    }, [currentPage, filters])\r\n\r\n\r\n    function acceptFilters(filters: string[]):void {\r\n        setCurrentPage(1);\r\n        setFilters(filters);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Container maxWidth=\"lg\">\r\n                <Pagination showPreloader={showPreloader} currentPage={currentPage} setCurrentPage={setCurrentPage} pagesCount={pagesCount}/>\r\n                <Filters acceptFilters={acceptFilters} showPreloader={showPreloader}/>\r\n                {!showPreloader ? <>\r\n                    <div className='characters__characters-list'>\r\n                        {errorText && <h2>{errorText}</h2>}\r\n                        {characterList.map((character: ICharacter, index) => {\r\n                            return <Character key={index} character={character}\r\n                                              setOpenModal={setOpenModal}\r\n                                              setCurrentCharacter={setCurrentCharacter}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                </> :\r\n                    <LinearProgress />\r\n                }\r\n                <Pagination showPreloader={showPreloader} currentPage={currentPage} setCurrentPage={setCurrentPage} pagesCount={pagesCount}/>\r\n            </Container>\r\n            {currentCharacter && <ModalCharacter isOpen={isOpenModal}\r\n                             character={currentCharacter}\r\n                             setOpenModal={setOpenModal}\r\n            />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","\r\nexport const baseURL = 'https://rickandmortyapi.com/api/';\r\n\r\nexport interface ICharacter {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    species: string,\r\n    type: string,\r\n    gender: string,\r\n    origin: {\r\n        name: string,\r\n        url: string\r\n    },\r\n    location: {\r\n        name: string,\r\n        url: string\r\n    },\r\n    image: string,\r\n    episode: string[],\r\n    url: string,\r\n    created: string\r\n}\r\n\r\nexport function getCharacters(page?:number, filters?: string[]) : Promise<ICharacter> {\r\n\r\n    let url = baseURL + 'character/';\r\n    if(page) url = url + '?page='+page;\r\n\r\n    if(filters?.length){\r\n        filters.forEach((filter)=>{\r\n            url = url+'&' + filter;\r\n        })\r\n    }\r\n    return fetch(url).then((response)=>{\r\n        if(response.ok) return response.json();\r\n        else {\r\n            if(response.status===404){\r\n                throw Error('Персоонажей не найдено');\r\n            }\r\n            else  {\r\n                throw Error('Произошла ошибка !');\r\n\r\n            }\r\n        }\r\n\r\n    })\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}